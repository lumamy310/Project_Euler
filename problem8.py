#given an input of a list of 13 digit numbers (string), find the product of each number and return it in a list of products
def findProduct(thirteens):
    maxProduct = 0
    for number in thirteens:
        product = 1
        for digit in number:
            product = product * int(digit)
        if product > maxProduct:
            maxProduct = product
    return maxProduct


number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

example = "22222911111111111111111111111030"

thirteens = []

#finds all 13 digit numbers
counter = 0
for digit in number: 
    thirteens.append(number[counter:counter+13])
    counter += 1
del thirteens[len(thirteens)-12:len(thirteens)]

#removes all thirteen digit numbers that contain a 0
zeros = []
for num in thirteens:
    if '0' in num:
        zeros.append(num)
for num in zeros:
    thirteens.remove(num)

#we now have a list of every 13 digit number that does not contain 0
#find the largest product of the 13 digits numbers
print(findProduct(thirteens))
